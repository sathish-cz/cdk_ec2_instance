import { AccessLevelList } from '../shared/access-level';
import { PolicyStatement, Operator } from '../shared';
import { aws_iam as iam } from "aws-cdk-lib";
/**
 * (experimental) Statement provider for service [account](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsaccountmanagement.html).
 *
 * @experimental
 */
export declare class Account extends PolicyStatement {
    /**
     * (experimental) Holds the prefix of the service actions, e.g. `ec2`.
     *
     * @experimental
     */
    servicePrefix: string;
    /**
     * (experimental) Grants permission to delete the alternate contacts for an account.
     *
     * Access Level: Write
     *
     * @experimental
     */
    toDeleteAlternateContact(): this;
    /**
     * (experimental) Grants permission to disable use of a Region.
     *
     * Access Level: Write
     *
     * Possible conditions:
     * - .ifTargetRegion()
     *
     * https://docs.aws.amazon.com/general/latest/gr/rande-manage.html
     *
     * @experimental
     */
    toDisableRegion(): this;
    /**
     * (experimental) Grants permission to enable use of a Region.
     *
     * Access Level: Write
     *
     * Possible conditions:
     * - .ifTargetRegion()
     *
     * https://docs.aws.amazon.com/general/latest/gr/rande-manage.html
     *
     * @experimental
     */
    toEnableRegion(): this;
    /**
     * (experimental) Grants permission to retrieve the alternate contacts for an account.
     *
     * Access Level: Read
     *
     * @experimental
     */
    toGetAlternateContact(): this;
    /**
     * (experimental) Grants permission to list the available Regions.
     *
     * Access Level: List
     *
     * https://docs.aws.amazon.com/general/latest/gr/rande-manage.html
     *
     * @experimental
     */
    toListRegions(): this;
    /**
     * (experimental) Grants permission to modify the alternate contacts for an account.
     *
     * Access Level: Write
     *
     * @experimental
     */
    toPutAlternateContact(): this;
    /**
     * @experimental
     */
    protected accessLevelList: AccessLevelList;
    /**
     * (experimental) Adds a resource of type account to the statement.
     *
     * @param account - Account of the resource;
     * @param partition - Partition of the AWS account [aws, aws-cn, aws-us-gov];
     * @experimental
     */
    onAccount(account?: string, partition?: string): this;
    /**
     * (experimental) Adds a resource of type accountInOrganization to the statement.
     *
     * @param managementAccountId - Identifier for the managementAccountId.
     * @param organizationId - Identifier for the organizationId.
     * @param memberAccountId - Identifier for the memberAccountId.
     * @param partition - Partition of the AWS account [aws, aws-cn, aws-us-gov];
     * @experimental
     */
    onAccountInOrganization(managementAccountId: string, organizationId: string, memberAccountId: string, partition?: string): this;
    /**
     * (experimental) Filters access by the resource path for an account in an organization.
     *
     * @param value The value(s) to check.
     * @param operator Works with [string operators](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_condition_operators.html#Conditions_String). **Default:** `StringLike`.
     * @experimental
     */
    ifAccountResourceOrgPaths(value: string | string[], operator?: Operator | string): this;
    /**
     * (experimental) Filters access by resource tags for an account in an organization.
     *
     * @param tagKey The tag key to check.
     * @param value The value(s) to check.
     * @param operator Works with [string operators](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_condition_operators.html#Conditions_String). **Default:** `StringLike`.
     * @experimental
     */
    ifAccountResourceOrgTags(tagKey: string, value: string | string[], operator?: Operator | string): this;
    /**
     * (experimental) Filters access by alternate contact types.
     *
     * @param value The value(s) to check.
     * @param operator Works with [string operators](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_condition_operators.html#Conditions_String). **Default:** `StringLike`.
     * @experimental
     */
    ifAlternateContactTypes(value: string | string[], operator?: Operator | string): this;
    /**
     * (experimental) Filters access by a list of Regions. Enables or disables all the Regions specified here.
     *
     * Applies to actions:
     * - .toDisableRegion()
     * - .toEnableRegion()
     *
     * @param value The value(s) to check.
     * @param operator Works with [string operators](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_condition_operators.html#Conditions_String). **Default:** `StringLike`.
     * @experimental
     */
    ifTargetRegion(value: string | string[], operator?: Operator | string): this;
    /**
     * (experimental) Statement provider for service [account](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsaccountmanagement.html).
     *
     * @experimental
     */
    constructor(props?: iam.PolicyStatementProps);
}
