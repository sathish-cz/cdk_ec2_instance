"use strict";
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.Voiceid = void 0;
const JSII_RTTI_SYMBOL_1 = Symbol.for("jsii.rtti");
const shared_1 = require("../shared");
/**
 * (experimental) Statement provider for service [voiceid](https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonconnectvoiceid.html).
 *
 * @experimental
 */
class Voiceid extends shared_1.PolicyStatement {
    /**
     * (experimental) Statement provider for service [voiceid](https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonconnectvoiceid.html).
     *
     * @experimental
     */
    constructor(props) {
        super(props);
        /**
         * (experimental) Holds the prefix of the service actions, e.g. `ec2`.
         *
         * @experimental
         */
        this.servicePrefix = 'voiceid';
        /**
         * @experimental
         */
        this.accessLevelList = {
            Write: [
                'CreateDomain',
                'DeleteDomain',
                'DeleteFraudster',
                'DeleteSpeaker',
                'EvaluateSession',
                'OptOutSpeaker',
                'RegisterComplianceConsent',
                'StartFraudsterRegistrationJob',
                'StartSpeakerEnrollmentJob',
                'UpdateDomain'
            ],
            Read: [
                'DescribeComplianceConsent',
                'DescribeDomain',
                'DescribeFraudster',
                'DescribeFraudsterRegistrationJob',
                'DescribeSpeaker',
                'DescribeSpeakerEnrollmentJob',
                'ListTagsForResource'
            ],
            List: [
                'ListDomains',
                'ListFraudsterRegistrationJobs',
                'ListSpeakerEnrollmentJobs',
                'ListSpeakers'
            ],
            Tagging: [
                'TagResource',
                'UntagResource'
            ]
        };
    }
    /**
     * (experimental) Grants permission to create a domain.
     *
     * Access Level: Write
     *
     * Possible conditions:
     * - .ifAwsRequestTag()
     * - .ifAwsTagKeys()
     *
     * https://docs.aws.amazon.com/voiceid/latest/APIReference/API_CreateDomain.html
     *
     * @experimental
     */
    toCreateDomain() {
        return this.to('CreateDomain');
    }
    /**
     * (experimental) Grants permission to delete a domain.
     *
     * Access Level: Write
     *
     * https://docs.aws.amazon.com/voiceid/latest/APIReference/API_DeleteDomain.html
     *
     * @experimental
     */
    toDeleteDomain() {
        return this.to('DeleteDomain');
    }
    /**
     * (experimental) Grants permission to delete a fraudster.
     *
     * Access Level: Write
     *
     * https://docs.aws.amazon.com/voiceid/latest/APIReference/API_DeleteFraudster.html
     *
     * @experimental
     */
    toDeleteFraudster() {
        return this.to('DeleteFraudster');
    }
    /**
     * (experimental) Grants permission to delete a speaker.
     *
     * Access Level: Write
     *
     * https://docs.aws.amazon.com/voiceid/latest/APIReference/API_DeleteSpeaker.html
     *
     * @experimental
     */
    toDeleteSpeaker() {
        return this.to('DeleteSpeaker');
    }
    /**
     * (experimental) Grants permission to describe compliance consent.
     *
     * Access Level: Read
     *
     * https://docs.aws.amazon.com/connect/latest/adminguide/enable-voiceid.html#enable-voiceid-step1
     *
     * @experimental
     */
    toDescribeComplianceConsent() {
        return this.to('DescribeComplianceConsent');
    }
    /**
     * (experimental) Grants permission to describe a domain.
     *
     * Access Level: Read
     *
     * https://docs.aws.amazon.com/voiceid/latest/APIReference/API_DescribeDomain.html
     *
     * @experimental
     */
    toDescribeDomain() {
        return this.to('DescribeDomain');
    }
    /**
     * (experimental) Grants permission to describe a fraudster.
     *
     * Access Level: Read
     *
     * https://docs.aws.amazon.com/voiceid/latest/APIReference/API_DescribeFraudster.html
     *
     * @experimental
     */
    toDescribeFraudster() {
        return this.to('DescribeFraudster');
    }
    /**
     * (experimental) Grants permission to describe a fraudster registration job.
     *
     * Access Level: Read
     *
     * https://docs.aws.amazon.com/voiceid/latest/APIReference/API_DescribeFraudsterRegistrationJob.html
     *
     * @experimental
     */
    toDescribeFraudsterRegistrationJob() {
        return this.to('DescribeFraudsterRegistrationJob');
    }
    /**
     * (experimental) Grants permission to describe a speaker.
     *
     * Access Level: Read
     *
     * https://docs.aws.amazon.com/voiceid/latest/APIReference/API_DescribeSpeaker.html
     *
     * @experimental
     */
    toDescribeSpeaker() {
        return this.to('DescribeSpeaker');
    }
    /**
     * (experimental) Grants permission to describe a speaker enrollment job.
     *
     * Access Level: Read
     *
     * https://docs.aws.amazon.com/voiceid/latest/APIReference/API_DescribeSpeakerEnrollmentJob.html
     *
     * @experimental
     */
    toDescribeSpeakerEnrollmentJob() {
        return this.to('DescribeSpeakerEnrollmentJob');
    }
    /**
     * (experimental) Grants permission to evaluate a session.
     *
     * Access Level: Write
     *
     * https://docs.aws.amazon.com/voiceid/latest/APIReference/API_EvaluateSession.html
     *
     * @experimental
     */
    toEvaluateSession() {
        return this.to('EvaluateSession');
    }
    /**
     * (experimental) Grants permission to list domains for an account.
     *
     * Access Level: List
     *
     * https://docs.aws.amazon.com/voiceid/latest/APIReference/API_ListDomains.html
     *
     * @experimental
     */
    toListDomains() {
        return this.to('ListDomains');
    }
    /**
     * (experimental) Grants permission to list fraudster registration jobs for a domain.
     *
     * Access Level: List
     *
     * https://docs.aws.amazon.com/voiceid/latest/APIReference/API_ListFraudsterRegistrationJobs.html
     *
     * @experimental
     */
    toListFraudsterRegistrationJobs() {
        return this.to('ListFraudsterRegistrationJobs');
    }
    /**
     * (experimental) Grants permission to list speaker enrollment jobs for a domain.
     *
     * Access Level: List
     *
     * https://docs.aws.amazon.com/voiceid/latest/APIReference/API_ListSpeakerEnrollmentJobs.html
     *
     * @experimental
     */
    toListSpeakerEnrollmentJobs() {
        return this.to('ListSpeakerEnrollmentJobs');
    }
    /**
     * (experimental) Grants permission to list speakers for a domain.
     *
     * Access Level: List
     *
     * https://docs.aws.amazon.com/voiceid/latest/APIReference/API_ListSpeakers.html
     *
     * @experimental
     */
    toListSpeakers() {
        return this.to('ListSpeakers');
    }
    /**
     * (experimental) Grants permission to list tags for a Voice ID resource.
     *
     * Access Level: Read
     *
     * https://docs.aws.amazon.com/voiceid/latest/APIReference/API_ListTagsForResource.html
     *
     * @experimental
     */
    toListTagsForResource() {
        return this.to('ListTagsForResource');
    }
    /**
     * (experimental) Grants permission to opt out a speaker.
     *
     * Access Level: Write
     *
     * https://docs.aws.amazon.com/voiceid/latest/APIReference/API_OptOutSpeaker.html
     *
     * @experimental
     */
    toOptOutSpeaker() {
        return this.to('OptOutSpeaker');
    }
    /**
     * (experimental) Grants permission to register compliance consent.
     *
     * Access Level: Write
     *
     * https://docs.aws.amazon.com/connect/latest/adminguide/enable-voiceid.html#enable-voiceid-step1
     *
     * @experimental
     */
    toRegisterComplianceConsent() {
        return this.to('RegisterComplianceConsent');
    }
    /**
     * (experimental) Grants permission to start a fraudster registration job.
     *
     * Access Level: Write
     *
     * https://docs.aws.amazon.com/voiceid/latest/APIReference/API_StartFraudsterRegistrationJob.html
     *
     * @experimental
     */
    toStartFraudsterRegistrationJob() {
        return this.to('StartFraudsterRegistrationJob');
    }
    /**
     * (experimental) Grants permission to start a speaker enrollment job.
     *
     * Access Level: Write
     *
     * https://docs.aws.amazon.com/voiceid/latest/APIReference/API_StartSpeakerEnrollmentJob.html
     *
     * @experimental
     */
    toStartSpeakerEnrollmentJob() {
        return this.to('StartSpeakerEnrollmentJob');
    }
    /**
     * (experimental) Grants permission to tag a Voice ID resource.
     *
     * Access Level: Tagging
     *
     * Possible conditions:
     * - .ifAwsRequestTag()
     * - .ifAwsTagKeys()
     *
     * https://docs.aws.amazon.com/voiceid/latest/APIReference/API_TagResource.html
     *
     * @experimental
     */
    toTagResource() {
        return this.to('TagResource');
    }
    /**
     * (experimental) Grants permission to remove a tag from a Voice ID resource.
     *
     * Access Level: Tagging
     *
     * Possible conditions:
     * - .ifAwsTagKeys()
     *
     * https://docs.aws.amazon.com/voiceid/latest/APIReference/API_UntagResource.html
     *
     * @experimental
     */
    toUntagResource() {
        return this.to('UntagResource');
    }
    /**
     * (experimental) Grants permission to update a domain.
     *
     * Access Level: Write
     *
     * https://docs.aws.amazon.com/voiceid/latest/APIReference/API_UpdateDomain.html
     *
     * @experimental
     */
    toUpdateDomain() {
        return this.to('UpdateDomain');
    }
    /**
     * (experimental) Adds a resource of type domain to the statement.
     *
     * https://docs.aws.amazon.com/connect/latest/adminguide/enable-voiceid.html#voiceid-domain
     *
     * @param domainId - Identifier for the domainId.
     * @param account - Account of the resource;
     * @param region - Region of the resource;
     * @param partition - Partition of the AWS account [aws, aws-cn, aws-us-gov]; defaults to `aws`.
     * @experimental
     */
    onDomain(domainId, account, region, partition) {
        return this.on(`arn:${partition || 'aws'}:voiceid:${region || '*'}:${account || '*'}:domain/${domainId}`);
    }
}
exports.Voiceid = Voiceid;
_a = JSII_RTTI_SYMBOL_1;
Voiceid[_a] = { fqn: "cdk-iam-floyd.Voiceid", version: "0.300.0" };
//# sourceMappingURL=data:application/json;base64,