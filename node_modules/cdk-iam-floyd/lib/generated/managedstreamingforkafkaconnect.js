"use strict";
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.Kafkaconnect = void 0;
const JSII_RTTI_SYMBOL_1 = Symbol.for("jsii.rtti");
const shared_1 = require("../shared");
/**
 * (experimental) Statement provider for service [kafkaconnect](https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonmanagedstreamingforkafkaconnect.html).
 *
 * @experimental
 */
class Kafkaconnect extends shared_1.PolicyStatement {
    /**
     * (experimental) Statement provider for service [kafkaconnect](https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonmanagedstreamingforkafkaconnect.html).
     *
     * @experimental
     */
    constructor(props) {
        super(props);
        /**
         * (experimental) Holds the prefix of the service actions, e.g. `ec2`.
         *
         * @experimental
         */
        this.servicePrefix = 'kafkaconnect';
        /**
         * @experimental
         */
        this.accessLevelList = {
            Write: [
                'CreateConnector',
                'CreateCustomPlugin',
                'CreateWorkerConfiguration',
                'DeleteConnector',
                'UpdateConnector'
            ],
            Read: [
                'DescribeConnector',
                'DescribeCustomPlugin',
                'DescribeWorkerConfiguration',
                'ListConnectors',
                'ListCustomPlugins',
                'ListWorkerConfigurations'
            ]
        };
    }
    /**
     * (experimental) Grants permission to create an MSK Connect connector.
     *
     * Access Level: Write
     *
     * Dependent actions:
     * - ec2:CreateNetworkInterface
     * - ec2:DescribeSecurityGroups
     * - ec2:DescribeSubnets
     * - ec2:DescribeVpcs
     * - firehose:TagDeliveryStream
     * - iam:AttachRolePolicy
     * - iam:CreateServiceLinkedRole
     * - iam:PassRole
     * - iam:PutRolePolicy
     * - logs:CreateLogDelivery
     * - logs:DescribeLogGroups
     * - logs:DescribeResourcePolicies
     * - logs:GetLogDelivery
     * - logs:ListLogDeliveries
     * - logs:PutResourcePolicy
     * - s3:GetBucketPolicy
     * - s3:PutBucketPolicy
     *
     * https://docs.aws.amazon.com/MCK/latest/mck/API_CreateConnector.html
     *
     * @experimental
     */
    toCreateConnector() {
        return this.to('CreateConnector');
    }
    /**
     * (experimental) Grants permission to create an MSK Connect custom plugin.
     *
     * Access Level: Write
     *
     * Dependent actions:
     * - s3:GetObject
     *
     * https://docs.aws.amazon.com/MCK/latest/mck/API_CreateCustomPlugin.html
     *
     * @experimental
     */
    toCreateCustomPlugin() {
        return this.to('CreateCustomPlugin');
    }
    /**
     * (experimental) Grants permission to create an MSK Connect worker configuration.
     *
     * Access Level: Write
     *
     * https://docs.aws.amazon.com/MCK/latest/mck/API_CreateWorkerConfiguration.html
     *
     * @experimental
     */
    toCreateWorkerConfiguration() {
        return this.to('CreateWorkerConfiguration');
    }
    /**
     * (experimental) Grants permission to delete an MSK Connect connector.
     *
     * Access Level: Write
     *
     * Dependent actions:
     * - logs:DeleteLogDelivery
     * - logs:ListLogDeliveries
     *
     * https://docs.aws.amazon.com/MCK/latest/mck/API_DeleteConnector.html
     *
     * @experimental
     */
    toDeleteConnector() {
        return this.to('DeleteConnector');
    }
    /**
     * (experimental) Grants permission to describe an MSK Connect connector.
     *
     * Access Level: Read
     *
     * https://docs.aws.amazon.com/MCK/latest/mck/API_DescribeConnector.html
     *
     * @experimental
     */
    toDescribeConnector() {
        return this.to('DescribeConnector');
    }
    /**
     * (experimental) Grants permission to describe an MSK Connect custom plugin.
     *
     * Access Level: Read
     *
     * https://docs.aws.amazon.com/MCK/latest/mck/API_DescribeCustomPlugin.html
     *
     * @experimental
     */
    toDescribeCustomPlugin() {
        return this.to('DescribeCustomPlugin');
    }
    /**
     * (experimental) Grants permission to describe an MSK Connect worker configuration.
     *
     * Access Level: Read
     *
     * https://docs.aws.amazon.com/MCK/latest/mck/API_DescribeWorkerConfiguration.html
     *
     * @experimental
     */
    toDescribeWorkerConfiguration() {
        return this.to('DescribeWorkerConfiguration');
    }
    /**
     * (experimental) Grants permission to list all MSK Connect connectors in this account.
     *
     * Access Level: Read
     *
     * https://docs.aws.amazon.com/MCK/latest/mck/API_ListConnectors.html
     *
     * @experimental
     */
    toListConnectors() {
        return this.to('ListConnectors');
    }
    /**
     * (experimental) Grants permission to list all MSK Connect custom plugins in this account.
     *
     * Access Level: Read
     *
     * https://docs.aws.amazon.com/MCK/latest/mck/API_ListCustomPlugins.html
     *
     * @experimental
     */
    toListCustomPlugins() {
        return this.to('ListCustomPlugins');
    }
    /**
     * (experimental) Grants permission to list all MSK Connect worker configurations in this account.
     *
     * Access Level: Read
     *
     * https://docs.aws.amazon.com/MCK/latest/mck/API_ListWorkerConfigurations.html
     *
     * @experimental
     */
    toListWorkerConfigurations() {
        return this.to('ListWorkerConfigurations');
    }
    /**
     * (experimental) Grants permission to update an MSK Connect connector.
     *
     * Access Level: Write
     *
     * https://docs.aws.amazon.com/MCK/latest/mck/API_UpdateConnector.html
     *
     * @experimental
     */
    toUpdateConnector() {
        return this.to('UpdateConnector');
    }
    /**
     * (experimental) Adds a resource of type connector to the statement.
     *
     * https://docs.aws.amazon.com/MCK/latest/mck/API_ConnectorSummary.html
     *
     * @param connectorName - Identifier for the connectorName.
     * @param uUID - Identifier for the uUID.
     * @param account - Account of the resource;
     * @param region - Region of the resource;
     * @param partition - Partition of the AWS account [aws, aws-cn, aws-us-gov];
     * @experimental
     */
    onConnector(connectorName, uUID, account, region, partition) {
        return this.on(`arn:${partition || 'aws'}:kafkaconnect:${region || '*'}:${account || '*'}:connector/${connectorName}/${uUID}`);
    }
    /**
     * (experimental) Adds a resource of type custom plugin to the statement.
     *
     * https://docs.aws.amazon.com/MCK/latest/mck/API_CustomPlugin.html
     *
     * @param customPluginName - Identifier for the customPluginName.
     * @param uUID - Identifier for the uUID.
     * @param account - Account of the resource;
     * @param region - Region of the resource;
     * @param partition - Partition of the AWS account [aws, aws-cn, aws-us-gov];
     * @experimental
     */
    onCustomPlugin(customPluginName, uUID, account, region, partition) {
        return this.on(`arn:${partition || 'aws'}:kafkaconnect:${region || '*'}:${account || '*'}:custom-plugin/${customPluginName}/${uUID}`);
    }
    /**
     * (experimental) Adds a resource of type worker configuration to the statement.
     *
     * https://docs.aws.amazon.com/MCK/latest/mck/API_WorkerConfiguration.html
     *
     * @param workerConfigurationName - Identifier for the workerConfigurationName.
     * @param uUID - Identifier for the uUID.
     * @param account - Account of the resource;
     * @param region - Region of the resource;
     * @param partition - Partition of the AWS account [aws, aws-cn, aws-us-gov];
     * @experimental
     */
    onWorkerConfiguration(workerConfigurationName, uUID, account, region, partition) {
        return this.on(`arn:${partition || 'aws'}:kafkaconnect:${region || '*'}:${account || '*'}:worker-configuration/${workerConfigurationName}/${uUID}`);
    }
}
exports.Kafkaconnect = Kafkaconnect;
_a = JSII_RTTI_SYMBOL_1;
Kafkaconnect[_a] = { fqn: "cdk-iam-floyd.Kafkaconnect", version: "0.300.0" };
//# sourceMappingURL=data:application/json;base64,